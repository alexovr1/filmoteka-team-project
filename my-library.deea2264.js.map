{"mappings":"oeAAAA,EAAA,S,2CAMA,MAAMC,EAAO,CACTC,QAASC,SAASC,cAAc,YAChCC,MAAOF,SAASC,cAAc,UAC9BE,UAAWH,SAASC,cAAc,oBAClCG,cAAeJ,SAASC,cAAc,wBACtCI,MAAOL,SAASC,cAAc,gBAC9BK,cAAeN,SAASC,cAAc,uBAIpCM,EAASC,IACX,IACI,MAAMC,EAAkBC,aAAaC,QAAQH,GAE7C,OAA2B,OAApBC,OAA2BG,EAAYC,KAAKC,MAAML,E,CAC3D,MAAOM,GACLC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAI3CC,EAA0BX,EAAO,WACjCY,EAAwBZ,EAAO,SAyCrC,SAASa,IAKL,GAJAtB,EAAKC,QAAQsB,UAAUC,IAAI,UAC3BxB,EAAKI,MAAMmB,UAAUE,OAAO,UAE5BzB,EAAKK,UAAUqB,UAAY,GACtBN,EAIA,CACD,MAAMO,EAA8BP,EAAwBQ,KAAI,EAACC,GAAEA,EAAEC,KAAEA,EAAIC,OAAEA,EAAMC,MAAEA,EAAKC,OAAEA,EAAMC,KAAEA,KAKzF,wCAAwCL,mEACEI,WAAgBD,oEAElCA,2GANVD,EAAOI,KAAK,mEACdL,EAAKM,MAAM,EAAG,uEACfF,EAAKG,YAAY,8DAYlCF,KAAK,IACVnC,EAAKK,UAAUiC,mBAAmB,YAAaX,E,MArB/C3B,EAAKK,UAAUqB,UAAY,GAC3B1B,EAAKK,UAAUiC,mBAAmB,aAAc,uE,CA2CxD,SAASC,IACLvC,EAAKO,MAAMgB,UAAUiB,OAAO,Y,CA1FhCxC,EAAKI,MAAMqC,iBAAiB,SAM5B,WAMI,GALAzC,EAAKI,MAAMmB,UAAUC,IAAI,UACzBxB,EAAKC,QAAQsB,UAAUE,OAAO,UAE9BzB,EAAKK,UAAUqB,UAAY,GAEtBL,EAIA,CACD,MAAMqB,EAA4BrB,EAAsBO,KAAI,EAACC,GAAEA,EAAEC,KAAEA,EAAIC,OAAEA,EAAMC,MAAEA,EAAKC,OAAEA,EAAMC,KAAEA,KAKrF,wCAAwCL,mEACEI,WAAgBD,oEAElCA,2GANVD,EAAOI,KAAK,mEACdL,EAAKM,MAAM,EAAG,uEACfF,EAAKG,YAAY,8DAYlCF,KAAK,IACVnC,EAAKK,UAAUiC,mBAAmB,YAAaI,E,MArB/C1C,EAAKK,UAAUqB,UAAY,GAC3B1B,EAAKK,UAAUiC,mBAAmB,aAAc,qE,IAbxDtC,EAAKC,QAAQwC,iBAAiB,QAASnB,GACvCtB,EAAKK,UAAUoC,iBAAiB,SAoEhCE,eAA+BC,GAC3B,GAA2B,oBAAvBA,EAAEC,OAAOC,UACT,OAGJ,MACMjB,EADOe,EAAEC,OAAOE,QAAQ,mBACdC,QAAQnB,IAO5Bc,eAA0BM,GACtBjD,EAAKM,cAAcoB,UAAY,GAC/B1B,EAAKM,cAAcgC,mBAAmB,aAAa,EAAAY,EAAAC,SAASF,EAAKG,QACjE,EAAAC,EAAAF,SAAkBF,EAAKG,K,EARvBE,OADmB,EAAAC,EAAAC,UAAS3B,IAE5B7B,EAAKK,UAAUoC,iBAAiB,QAASF,GACzCvC,EAAKQ,cAAciC,iBAAiB,QAASF,E,IA5EjDjB","sources":["src/library.js"],"sourcesContent":["import toggleModal from './js/futer-modal';\nimport writeLocalStorage from './js/localStorageApi';\nimport { trendFilms, filmGenre, searchFilms, filmInfo } from './js/fetchData';\nimport hugeCard from './js/hugeCard-template';\n\n\nconst refs = {\n    watched: document.querySelector('.watched'),\n    queue: document.querySelector('.queue'),\n    container: document.querySelector('.cards-container'),\n    modaHugelCard: document.querySelector('.modal-film__wrapper'),\n    modal: document.querySelector('[data-modal]'),\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n};\n\n\nconst getKey = key => {\n    try {\n        const serializedState = localStorage.getItem(key);\n        // console.log(serializedState);\n        return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (error) {\n        console.error(\"Get state error: \", error.message);\n    }\n};\n\nconst dataWatchedLocalStorage = getKey('watched');\nconst dataQueueLocalStorage = getKey('queue');\n\nrefs.queue.addEventListener('click', markupLibQueue);\nrefs.watched.addEventListener('click', markupLibWatched);\nrefs.container.addEventListener('click', handleCardClick);\n\nmarkupLibWatched();\n\nfunction markupLibQueue() {\n    refs.queue.classList.add('active')\n    refs.watched.classList.remove('active')\n\n    refs.container.innerHTML = \"\";\n\n    if (!dataQueueLocalStorage) {\n        refs.container.innerHTML = \"\";\n        refs.container.insertAdjacentHTML('afterbegin', '<p class=\"library__empty\">Oops! There`s nothing to show there!</p>')\n    }\n    else {\n        const dataQueueFromLocalStorage = dataQueueLocalStorage.map(({ id, date, genres, title, poster, vote\n        }) => {\n            const genresString = genres.join(\", \")\n            const reliseDate = date.slice(0, 4);\n            const voteToFix = vote.toPrecision(2);\n            return `<div class=\"card-container\" data-id=\"${id}\">\n                  <img src=\"https://image.tmdb.org/t/p/w500${poster}\" alt=\"${title\n                }\" class=\"film-img\" />\n                  <h2 class=\"film-title\">${title}</h2>\n                  <div class=\"info-container\">\n                      <span class=\"film-genres\">${genresString} |</span>\n                      <span class=\"film-relise\">${reliseDate}</span>\n                      <span class=\"lib-modal-film__vote\">${voteToFix}</span>\n                  </div>\n              </div>`;\n        })\n            .join('');\n        refs.container.insertAdjacentHTML('beforeend', dataQueueFromLocalStorage)\n    }\n}\n\n\nfunction markupLibWatched() {\n    refs.watched.classList.add('active')\n    refs.queue.classList.remove('active')\n\n    refs.container.innerHTML = \"\";\n    if (!dataWatchedLocalStorage) {\n        refs.container.innerHTML = \"\";\n        refs.container.insertAdjacentHTML('afterbegin', '<p class=\"library__empty\">Oops! There`cos nothing to show there!</p>')\n    }\n    else {\n        const dataWatchedFromLocalStorage = dataWatchedLocalStorage.map(({ id, date, genres, title, poster, vote\n        }) => {\n            const genresString = genres.join(\", \")\n            const reliseDate = date.slice(0, 4);\n            const voteToFix = vote.toPrecision(2);\n            return `<div class=\"card-container\" data-id=\"${id}\">\n                  <img src=\"https://image.tmdb.org/t/p/w500${poster}\" alt=\"${title\n                }\" class=\"film-img\" />\n                  <h2 class=\"film-title\">${title}</h2>\n                  <div class=\"info-container\">\n                      <span class=\"film-genres\">${genresString} |</span>\n                      <span class=\"film-relise\">${reliseDate}</span>\n                      <span class=\"lib-modal-film__vote\">${voteToFix}</span>\n                  </div>\n              </div>`;\n        })\n            .join('');\n        refs.container.insertAdjacentHTML('beforeend', dataWatchedFromLocalStorage)\n    }\n}\n\nasync function handleCardClick(e) {\n    if (e.target.className === 'cards-container') {\n        return;\n    }\n\n    const card = e.target.closest('.card-container');\n    const id = card.dataset.id;\n    const info = await filmInfo(id);\n    filmInfoFn(info);\n    refs.container.addEventListener('click', cardModal);\n    refs.closeModalBtn.addEventListener('click', cardModal);\n}\n\nasync function filmInfoFn(info) {\n    refs.modaHugelCard.innerHTML = '';\n    refs.modaHugelCard.insertAdjacentHTML('beforeend', hugeCard(info.data));\n    writeLocalStorage(info.data);\n}\n\nfunction cardModal() {\n    refs.modal.classList.toggle('is-hidden');\n}\n\n"],"names":["parcelRequire","$ce3726a01b8ab25a$var$refs","watched","document","querySelector","queue","container","modaHugelCard","modal","closeModalBtn","$ce3726a01b8ab25a$var$getKey","key","serializedState","localStorage","getItem","undefined","JSON","parse","error","console","message","$ce3726a01b8ab25a$var$dataWatchedLocalStorage","$ce3726a01b8ab25a$var$dataQueueLocalStorage","$ce3726a01b8ab25a$var$markupLibWatched","classList","add","remove","innerHTML","dataWatchedFromLocalStorage","map","id","date","genres","title","poster","vote","join","slice","toPrecision","insertAdjacentHTML","$ce3726a01b8ab25a$var$cardModal","toggle","addEventListener","dataQueueFromLocalStorage","async","e","target","className","closest","dataset","info","$2T8VK","default","data","$4ncHU","$ce3726a01b8ab25a$var$filmInfoFn","$45MhR","filmInfo"],"version":3,"file":"my-library.deea2264.js.map"}